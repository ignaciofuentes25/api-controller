apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "helm.labels" . | nindent 4 }}
  name: {{ include "helm.fullname" . }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "helm.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - image:  "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        name: {{ .Chart.Name }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: PORT
          value: "3000"
        - name: HOST_URL
          value: "https://{{ .Values.env.DOMAIN_NAME }}"
        - name: NODE_ENV
          value: "{{ .Values.env.NODE_ENV }}"
        - name: DB_CONNSTR
          value: "{{ .Values.env.DB_CONNSTR }}"
        - name: DB_USR
          valueFrom:
            secretKeyRef:
              key: DB_USR
              name: {{ include "helm.fullname" . }}
        - name: DB_PWD
          valueFrom:
            secretKeyRef:
              key: DB_PWD
              name: {{ include "helm.fullname" . }}
